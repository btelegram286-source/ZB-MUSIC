"""
Playback Kontrol Fonksiyonlarƒ±
Ana bot dosyasƒ±nda kullanƒ±lmak √ºzere playback kontrol fonksiyonlarƒ±
"""
import time
from typing import Dict, List, Optional
import telebot

def handle_playback_callback(bot: telebot.TeleBot, call, user_id: int, data: str,
                           now_playing: Dict, playback_state: Dict, user_queues: Dict,
                           music_library: Dict, premium_users: set):
    """Playback ile ilgili callback'larƒ± i≈üle"""

    if data.startswith('play_'):
        # Ger√ßek oynatma ba≈ülatma i≈ülemi
        video_id = data.split('_')[1]
        if user_id not in premium_users:
            bot.answer_callback_query(call.id, "‚ùå Bu √∂zellik premium kullanƒ±cƒ±lar i√ßin")
            return

        # ≈ûu anda √ßalan ≈üarkƒ±yƒ± ayarla
        now_playing[user_id] = {
            'video_id': video_id,
            'title': music_library.get(video_id, {}).get('title', 'Bilinmeyen'),
            'start_time': time.time(),
            'position': 0
        }
        playback_state[user_id] = 'playing'

        # Oynatma kontrol men√ºs√º g√∂ster
        markup = telebot.types.InlineKeyboardMarkup()
        markup.row(
            telebot.types.InlineKeyboardButton("‚è∏Ô∏è Duraklat", callback_data=f"pause_{video_id}"),
            telebot.types.InlineKeyboardButton("‚è≠Ô∏è Sonraki", callback_data=f"next_{video_id}"),
            telebot.types.InlineKeyboardButton("‚èπÔ∏è Durdur", callback_data=f"stop_{video_id}")
        )
        markup.row(
            telebot.types.InlineKeyboardButton("üîä Ses", callback_data=f"volume_{video_id}"),
            telebot.types.InlineKeyboardButton("üîÅ Tekrar", callback_data=f"repeat_{video_id}"),
            telebot.types.InlineKeyboardButton("üîÄ Karƒ±≈ütƒ±r", callback_data=f"shuffle_{video_id}")
        )

        song_title = now_playing[user_id]['title']
        bot.send_message(user_id, f"‚ñ∂Ô∏è *≈ûu Anda √áalƒ±yor:*\nüéµ {song_title}\n\nSes seviyesi: 80%\nTekrar modu: off\nKarƒ±≈ütƒ±r: Kapalƒ±",
                        reply_markup=markup, parse_mode='Markdown')
        bot.answer_callback_query(call.id, f"‚ñ∂Ô∏è {song_title[:30]}... oynatƒ±lƒ±yor")

    elif data.startswith('pause_'):
        # Oynatmayƒ± duraklat
        if user_id in playback_state and playback_state[user_id] == 'playing':
            playback_state[user_id] = 'paused'
            video_id = data.split('_')[1]
            bot.answer_callback_query(call.id, "‚è∏Ô∏è Oynatma duraklatƒ±ldƒ±")

            # Duraklatƒ±lmƒ±≈ü kontrol men√ºs√º
            markup = telebot.types.InlineKeyboardMarkup()
            markup.row(
                telebot.types.InlineKeyboardButton("‚ñ∂Ô∏è Devam Et", callback_data=f"resume_{video_id}"),
                telebot.types.InlineKeyboardButton("‚è≠Ô∏è Sonraki", callback_data=f"next_{video_id}"),
                telebot.types.InlineKeyboardButton("‚èπÔ∏è Durdur", callback_data=f"stop_{video_id}")
            )
            bot.send_message(user_id, "‚è∏Ô∏è *Oynatma Duraklatƒ±ldƒ±*", reply_markup=markup, parse_mode='Markdown')
        else:
            bot.answer_callback_query(call.id, "‚ùå ≈ûu anda √ßalan ≈üarkƒ± yok")

    elif data.startswith('resume_'):
        # Oynatmayƒ± devam ettir
        if user_id in playback_state and playback_state[user_id] == 'paused':
            playback_state[user_id] = 'playing'
            video_id = data.split('_')[1]
            bot.answer_callback_query(call.id, "‚ñ∂Ô∏è Oynatma devam ediyor")

            # Devam eden kontrol men√ºs√º
            markup = telebot.types.InlineKeyboardMarkup()
            markup.row(
                telebot.types.InlineKeyboardButton("‚è∏Ô∏è Duraklat", callback_data=f"pause_{video_id}"),
                telebot.types.InlineKeyboardButton("‚è≠Ô∏è Sonraki", callback_data=f"next_{video_id}"),
                telebot.types.InlineKeyboardButton("‚èπÔ∏è Durdur", callback_data=f"stop_{video_id}")
            )
            bot.send_message(user_id, "‚ñ∂Ô∏è *Oynatma Devam Ediyor*", reply_markup=markup, parse_mode='Markdown')
        else:
            bot.answer_callback_query(call.id, "‚ùå Duraklatƒ±lmƒ±≈ü ≈üarkƒ± yok")

    elif data.startswith('next_'):
        # Sonraki ≈üarkƒ±ya ge√ßi≈ü
        if user_id not in premium_users:
            bot.answer_callback_query(call.id, "‚ùå Bu √∂zellik premium kullanƒ±cƒ±lar i√ßin")
            return

        queue = user_queues.get(user_id, [])
        if not queue:
            bot.answer_callback_query(call.id, "‚ùå Kuyrukta ≈üarkƒ± yok")
            return

        # Mevcut ≈üarkƒ±nƒ±n indeksini bul
        current_video_id = data.split('_')[1]
        try:
            current_index = queue.index(current_video_id)
            next_index = (current_index + 1) % len(queue)
            next_video_id = queue[next_index]
        except (ValueError, IndexError):
            next_video_id = queue[0] if queue else None

        if next_video_id:
            # Sonraki ≈üarkƒ±yƒ± oynat
            now_playing[user_id] = {
                'video_id': next_video_id,
                'title': music_library.get(next_video_id, {}).get('title', 'Bilinmeyen'),
                'start_time': time.time(),
                'position': 0
            }
            playback_state[user_id] = 'playing'

            markup = telebot.types.InlineKeyboardMarkup()
            markup.row(
                telebot.types.InlineKeyboardButton("‚è∏Ô∏è Duraklat", callback_data=f"pause_{next_video_id}"),
                telebot.types.InlineKeyboardButton("‚è≠Ô∏è Sonraki", callback_data=f"next_{next_video_id}"),
                telebot.types.InlineKeyboardButton("‚èπÔ∏è Durdur", callback_data=f"stop_{next_video_id}")
            )

            song_title = now_playing[user_id]['title']
            bot.send_message(user_id, f"‚è≠Ô∏è *Sonraki ≈ûarkƒ±:*\nüéµ {song_title}", reply_markup=markup, parse_mode='Markdown')
            bot.answer_callback_query(call.id, f"‚è≠Ô∏è {song_title[:30]}... oynatƒ±lƒ±yor")
        else:
            bot.answer_callback_query(call.id, "‚ùå Sonraki ≈üarkƒ± bulunamadƒ±")

    elif data.startswith('stop_'):
        # Oynatmayƒ± durdur
        if user_id in playback_state:
            playback_state[user_id] = 'stopped'
            now_playing[user_id] = {}
            bot.answer_callback_query(call.id, "‚èπÔ∏è Oynatma durduruldu")
            bot.send_message(user_id, "‚èπÔ∏è *Oynatma Durduruldu*", parse_mode='Markdown')
        else:
            bot.answer_callback_query(call.id, "‚ùå √áalan ≈üarkƒ± yok")

    elif data.startswith('volume_'):
        # Ses seviyesi kontrol√º
        markup = telebot.types.InlineKeyboardMarkup()
        markup.row(
            telebot.types.InlineKeyboardButton("üîá Sessiz", callback_data="vol_0"),
            telebot.types.InlineKeyboardButton("üîâ D√º≈ü√ºk", callback_data="vol_0.3"),
            telebot.types.InlineKeyboardButton("üîä Normal", callback_data="vol_0.8")
        )
        markup.row(
            telebot.types.InlineKeyboardButton("üîä Y√ºksek", callback_data="vol_1.0"),
            telebot.types.InlineKeyboardButton("üîä Max", callback_data="vol_1.5")
        )

        bot.send_message(user_id, f"üîä *Ses Seviyesi*\n\nMevcut: 80%\n\nYeni seviye se√ßin:",
                        reply_markup=markup, parse_mode='Markdown')
        bot.answer_callback_query(call.id, "üîä Ses kontrol√º a√ßƒ±ldƒ±")

    elif data.startswith('vol_'):
        # Ses seviyesini ayarla
        vol_level = float(data.split('_')[1])
        bot.answer_callback_query(call.id, f"üîä Ses seviyesi {vol_level*100:.0f}% olarak ayarlandƒ±")
        bot.send_message(user_id, f"‚úÖ Ses seviyesi *{vol_level*100:.0f}%* olarak g√ºncellendi!", parse_mode='Markdown')

    elif data.startswith('repeat_'):
        # Tekrar modu deƒüi≈ütir
        bot.answer_callback_query(call.id, f"üîÅ Tekrar modu: one")
        bot.send_message(user_id, f"‚úÖ Tekrar modu: *one*", parse_mode='Markdown')

    elif data.startswith('shuffle_'):
        # Karƒ±≈ütƒ±rma modu deƒüi≈ütir
        bot.answer_callback_query(call.id, f"üîÄ Karƒ±≈ütƒ±rma: A√ßƒ±k")
        bot.send_message(user_id, f"‚úÖ Karƒ±≈ütƒ±rma modu: *A√ßƒ±k*", parse_mode='Markdown")

def create_playback_markup(video_id: str) -> telebot.types.InlineKeyboardMarkup:
    """Playback kontrol butonlarƒ± i√ßin markup olu≈ütur"""
    markup = telebot.types.InlineKeyboardMarkup()
    markup.row(
        telebot.types.InlineKeyboardButton("‚ñ∂Ô∏è Ba≈ülat", callback_data=f"play_{video_id}"),
        telebot.types.InlineKeyboardButton("‚è≠Ô∏è Sonraki", callback_data=f"next_{video_id}"),
        telebot.types.InlineKeyboardButton("‚èπÔ∏è Durdur", callback_data=f"stop_{video_id}")
    )
    return markup
